[project]
name = "lara-bomb"
version = "0.1.0"
description = "A bomberman-like online game"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "argon2-cffi>=23.1.0",
    "fastapi>=0.115.12",
    "prisma>=0.15.0",
    "pydantic>=2.11.2",
    "pydantic-settings>=2.8.1",
    "pygame>=2.6.1",
    "python-jose[cryptography]>=3.4.0",
    "uvicorn>=0.34.0",
]


[tool.ruff]
line-length = 100
target-version = "py313"

fix = true
show-fixes = true
output-format = "grouped"

# Seleção de regras - configuração extensiva baseada na documentação
lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "W",   # pycodestyle warnings
    "RUF", # ruff-specific rules
    # "D",   # pydocstyle
    "ANN", # flake8-annotations
    # "S",   # flake8-bandit
    # "T",   # flake8-debugger
]


# Ignorar regras específicas que podem ser muito restritivas
lint.ignore = [
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "ANN001", # Missing type annotation for self in method
    "ANN002",  # Missing type annotation for cls in classmethod
    "ANN003",  # Missing type annotation for kwargs
]

# Ativar fixação automática para todas as regras selecionadas
lint.fixable = ["ALL"]
lint.unfixable = []

lint.pydocstyle.convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.4",
]
